@model SearchClientWebApp.Areas.SME.Models.payment

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>rec_payment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AccountID, "AccountID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountID, new { htmlAttributes = new { @class = "form-control", @Value = Model.AccountID, @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.AccountID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, "Due Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control", @Value = Model.amount, @readonly = "true" , @id="due" , @type = "number" , @step = "0.01" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.totalpaid, "TotalPaid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.totalpaid, new { htmlAttributes = new { @class = "form-control", @Value = Model.totalpaid, @readonly = "true" , @id = "TotalPaid", @type = "number", @step = "0.01" } })
                @Html.ValidationMessageFor(model => Model.totalpaid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentAmount, new { htmlAttributes = new { @class = "form-control" , @id ="paymentAmount" , @type = "number", @step = "0.01" } })
                @Html.ValidationMessageFor(model => model.PaymentAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="return validateForm()"  />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    function validateForm() {
        var due = $('#due').val();
        var TotalPaid = $('#TotalPaid').val();
        var paymentAmount = $('#paymentAmount').val();
        if (paymentAmount < (due - TotalPaid)) {
                alert("Done.");
                return true;
            }
            else {
                alert("Invalid Amount");
                return false;
            }
        }
    
    </script>
}
