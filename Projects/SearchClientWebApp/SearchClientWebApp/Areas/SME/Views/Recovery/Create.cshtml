@model SearchClientWebApp.rec_collection

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>rec_collection</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Account_id, "Account_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account_id, new { htmlAttributes = new { @class = "form-control", @Value =ViewBag.account_id, @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.Account_id, "", new { @class = "text-danger" })
            
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CollOrLegal, "CollOrLegal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CollOrLegal", null, htmlAttributes: new { @class = "form-control", @id = "BindOther", @onchange = "FillCity()" })
                @Html.ValidationMessageFor(model => model.CollOrLegal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, new SelectList(Enumerable.Empty<SelectListItem>(), "ID", "StateName"),"Select city",new { @class = "form-control",  @id = "bindType" }) 
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfTransfer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfTransfer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOfTransfer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeFollowup, "TypeFollowup", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TypeFollowup, new SelectList(Enumerable.Empty<SelectListItem>(), "ID", "StateName"), "Select city", new { @class = "form-control", @id = "bindType2" })
                @Html.ValidationMessageFor(model => model.TypeFollowup, "", new { @class = "text-danger" })
            </div>
        </div>

      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>

    
  function FillCity() {
      var stateId = $('#BindOther').val();
    $.ajax({
        url: '/Recovery/FillCity',
        type: "GET",
        dataType: "JSON",
        data: { state: stateId },
        success: function (cities) {
            $("#bindType").html(""); // clear before appending new list
            $.each(cities, function (i, city) {
                $("#bindType").append(
                    $('<option></option>').val(city.ID).html(city.StateName));
            });
        }
    });
    $.ajax({
        url: '/Recovery/FillCity2',
        type: "GET",
        dataType: "JSON",
        data: { state: stateId },
        success: function (cities) {
            $("#bindType2").html(""); // clear before appending new list
            $.each(cities, function (i, city) {
                $("#bindType2").append(
                    $('<option></option>').val(city.ID).html(city.StateName));
            });
        }
    });
  }
</script>

    <script>
        $(document).ready(function () { FillCity() });
    </script>


  
}
